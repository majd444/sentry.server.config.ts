{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///Users/majd/vaste/probable-broccoli/convex/_generated/api.js"],"sourcesContent":["/* eslint-disable */\n/**\n * Generated `api` utility.\n *\n * THIS CODE IS AUTOMATICALLY GENERATED.\n *\n * To regenerate, run `npx convex dev`.\n * @module\n */\n\nimport { anyApi } from \"convex/server\";\n\n/**\n * A utility for referencing Convex functions in your app's API.\n *\n * Usage:\n * ```js\n * const myFunctionReference = api.myModule.myFunction;\n * ```\n */\nexport const api = anyApi;\nexport const internal = anyApi;\n"],"names":[],"mappings":"AAAA,kBAAkB,GAClB;;;;;;;CAOC;;;;AAED;AAAA;;AAUO,MAAM,MAAM,sJAAA,CAAA,SAAM;AAClB,MAAM,WAAW,sJAAA,CAAA,SAAM","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///Users/majd/vaste/probable-broccoli/actions/user-actions.ts"],"sourcesContent":["'use server'\n\nimport { auth } from \"@clerk/nextjs/server\"\nimport { ConvexHttpClient } from \"convex/browser\"\nimport { api } from \"@/convex/_generated/api\"\n\nconst convex = new ConvexHttpClient(process.env.NEXT_PUBLIC_CONVEX_URL!)\n\nexport async function syncUser() {\n  try {\n    const session = await auth()\n    const userId = session.userId\n    \n    if (!userId) {\n      return { success: false, error: 'User not authenticated' }\n    }\n    \n    // Get user data from Clerk\n    const user = await fetch(\n      `https://api.clerk.com/v1/users/${userId}`, \n      {\n        headers: {\n          'Authorization': `Bearer ${process.env.CLERK_SECRET_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    ).then(res => res.json())\n    \n    if (!user) {\n      return { success: false, error: 'User not found' }\n    }\n    \n    await convex.mutation(api.users.createOrUpdateUser, {\n      userId: user.id,\n      email: user.email_addresses[0]?.email_address,\n      name: `${user.first_name || ''} ${user.last_name || ''}`.trim() || undefined,\n      imageUrl: user.image_url,\n    })\n    \n    return { success: true }\n  } catch (error) {\n    console.error('Error syncing user with Convex:', error)\n    return { success: false, error: 'Failed to sync user' }\n  }\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;;;;;;AAEA,MAAM,SAAS,IAAI,+JAAA,CAAA,mBAAgB;AAE5B,eAAe;IACpB,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;QACzB,MAAM,SAAS,QAAQ,MAAM;QAE7B,IAAI,CAAC,QAAQ;YACX,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAyB;QAC3D;QAEA,2BAA2B;QAC3B,MAAM,OAAO,MAAM,MACjB,CAAC,+BAA+B,EAAE,QAAQ,EAC1C;YACE,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,QAAQ,GAAG,CAAC,gBAAgB,EAAE;gBACzD,gBAAgB;YAClB;QACF,GACA,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI;QAEtB,IAAI,CAAC,MAAM;YACT,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAiB;QACnD;QAEA,MAAM,OAAO,QAAQ,CAAC,2HAAA,CAAA,MAAG,CAAC,KAAK,CAAC,kBAAkB,EAAE;YAClD,QAAQ,KAAK,EAAE;YACf,OAAO,KAAK,eAAe,CAAC,EAAE,EAAE;YAChC,MAAM,GAAG,KAAK,UAAU,IAAI,GAAG,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,MAAM;YACnE,UAAU,KAAK,SAAS;QAC1B;QAEA,OAAO;YAAE,SAAS;QAAK;IACzB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO;YAAE,SAAS;YAAO,OAAO;QAAsB;IACxD;AACF;;;IApCsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///Users/majd/vaste/probable-broccoli/components/dashboard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/dashboard.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4R,GACzT,0DACA","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/majd/vaste/probable-broccoli/components/dashboard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/dashboard.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/dashboard.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwQ,GACrS,sCACA","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/majd/vaste/probable-broccoli/app/dashboard/page.tsx"],"sourcesContent":["import Dashboard from \"@/components/dashboard\"\n\nexport default function DashboardPage() {\n  return <Dashboard />\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBAAO,8OAAC,wHAAA,CAAA,UAAS;;;;;AACnB","debugId":null}}]
}