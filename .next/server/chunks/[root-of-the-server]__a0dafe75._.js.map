{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/majd/vaste/probable-broccoli/convex/_generated/api.js"],"sourcesContent":["/* eslint-disable */\n/**\n * Generated `api` utility.\n *\n * THIS CODE IS AUTOMATICALLY GENERATED.\n *\n * To regenerate, run `npx convex dev`.\n * @module\n */\n\nimport { anyApi } from \"convex/server\";\n\n/**\n * A utility for referencing Convex functions in your app's API.\n *\n * Usage:\n * ```js\n * const myFunctionReference = api.myModule.myFunction;\n * ```\n */\nexport const api = anyApi;\nexport const internal = anyApi;\n"],"names":[],"mappings":"AAAA,kBAAkB,GAClB;;;;;;;CAOC;;;;AAED;AAAA;;AAUO,MAAM,MAAM,wJAAA,CAAA,SAAM;AAClB,MAAM,WAAW,wJAAA,CAAA,SAAM","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Users/majd/vaste/probable-broccoli/app/api/discord/bot-config/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { currentUser } from '@clerk/nextjs/server';\nimport { ConvexHttpClient } from 'convex/browser';\nimport { api } from '@/convex/_generated/api';\n\nconst convex = new ConvexHttpClient(process.env.NEXT_PUBLIC_CONVEX_URL!);\n\nexport async function POST(request: NextRequest) {\n  try {\n    const user = await currentUser();\n    const userId = user?.id;\n    if (!userId) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = await request.json();\n    const { agentId, botToken, clientId, guildId } = body;\n\n    if (!agentId || !botToken || !clientId) {\n      return NextResponse.json(\n        { error: 'Missing required fields: agentId, botToken, clientId' },\n        { status: 400 }\n      );\n    }\n\n    // Store Discord bot configuration in Convex\n    const config = await convex.mutation(api.discord.saveDiscordConfig, {\n      userId,\n      agentId,\n      botToken,\n      clientId,\n      guildId: guildId || undefined,\n    });\n\n    return NextResponse.json({\n      success: true,\n      configId: config,\n      message: 'Discord bot configured successfully'\n    });\n\n  } catch (error) {\n    console.error('Discord config error:', error);\n    return NextResponse.json(\n      { error: 'Failed to configure Discord bot' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const user = await currentUser();\n    const userId = user?.id;\n    if (!userId) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const url = new URL(request.url);\n    const agentId = url.searchParams.get('agentId');\n\n    if (!agentId) {\n      return NextResponse.json({ error: 'agentId required' }, { status: 400 });\n    }\n\n    // Get Discord bot configuration from Convex\n    const config = await convex.query(api.discord.getDiscordConfig, {\n      userId,\n      agentId,\n    });\n\n    return NextResponse.json({\n      success: true,\n      config: config ? {\n        configId: config._id,\n        agentId: config.agentId,\n        clientId: config.clientId,\n        guildId: config.guildId,\n        isActive: config.isActive,\n        // Don't return the bot token for security\n      } : null\n    });\n\n  } catch (error) {\n    console.error('Discord config fetch error:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch Discord configuration' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE(request: NextRequest) {\n  try {\n    const user = await currentUser();\n    const userId = user?.id;\n    if (!userId) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const url = new URL(request.url);\n    const agentId = url.searchParams.get('agentId');\n\n    if (!agentId) {\n      return NextResponse.json({ error: 'agentId required' }, { status: 400 });\n    }\n\n    // Remove Discord bot configuration\n    await convex.mutation(api.discord.removeDiscordConfig, {\n      userId,\n      agentId,\n    });\n\n    return NextResponse.json({\n      success: true,\n      message: 'Discord bot configuration removed'\n    });\n\n  } catch (error) {\n    console.error('Discord config removal error:', error);\n    return NextResponse.json(\n      { error: 'Failed to remove Discord configuration' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}